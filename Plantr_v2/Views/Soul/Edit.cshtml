@model Plantr_v2.Models.Soul

@{
    Layout = "~/Views/Shared/_SoulLayout.cshtml";
}

<div class="form_container">
    <h2 class="page_title_text">Update</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <fieldset>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "mdl-textfield__label" })
                    <div class="input-group">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "mdl-textfield__input", name = "first_name", type = "text" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "", @style = "color: red; font-size: 8pt; opacity: 0.6;" })
            </div>

            <div class="form-group">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "mdl-textfield__label" })
                    <div class="input-group">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "mdl-textfield__input", name = "last_name", type = "text" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "", @style = "color: red; font-size: 8pt; opacity: 0.6;" })
            </div>

            <div class="form-group">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "mdl-textfield__label" })
                    <div class="input-group">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "mdl-textfield__input", name = "address", type = "text" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "", @style = "color: red; font-size: 8pt; opacity: 0.6;" })
            </div>

            <div class="form-group">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.LabelFor(model => model.AptNumber, htmlAttributes: new { @class = "mdl-textfield__label" })
                    <div class="input-group">
                        @Html.EditorFor(model => model.AptNumber, new { htmlAttributes = new { @class = "mdl-textfield__input", name = "apt_number", type = "text" } })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "mdl-textfield__label" })
                    <div class="input-group">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "mdl-textfield__input", name = "city", type = "text" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "", @style = "color: red; font-size: 8pt; opacity: 0.6;" })
            </div>

            <div class="form-group">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "mdl-textfield__label" })
                    <div class="input-group">
                        @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "mdl-textfield__input", name = "zip", type = "text" } })
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "", @style = "color: red; font-size: 8pt; opacity: 0.6;" })
            </div>

            <div class="form-group">
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "mdl-textfield__label" })
                    <div class="input-group">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "mdl-textfield__input", name = "phone", id = "phone" } })
                    </div>
                </div>
            </div>
        </fieldset>
        <div class="form-group" style="margin-left: 150px; margin-top: 60px;">
            <button type="submit" class="button_create" style="margin-right: 20px; background-color: #fe9700;">
                <span>Update</span>
                <div class="icon">
                    <i class="fa fa-plus"></i>
                </div>
            </button>

        </div>
    }
    <button class="button_create" style="margin-left: 380px; bottom: 52px;" onclick="location.href='@Url.Action("Details", "Soul", new { id = Model.Id })'">
        <span>Cancel</span>
        <div class="icon">
            <i class="fa fa-remove"></i>
        </div>
    </button>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")

    <section class="scripts">
        <script type="text/javascript">
            jQuery(function ($) {
                $("#phone").mask("(999) 999-9999", { placeholder: " " });
            });
        </script>
    </section>
}